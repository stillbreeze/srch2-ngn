<!--
    Configuration file for SRCH2 search server. 

    For more information about how to use this configuration file, please
    visit http://www.srch2.com/downloads.html and select the correct
    documentation version.

    Please email contact@srch2.com if you have questions.

    This configuration file defines 4 separate cores (data sources) in order to allow testing of
    basic multi-core functionality.  Core1 uses the movie demo database.  Core2 loads a small sample
    of the StackOverflow posts database.  Core3 is a fictitious business directoy (or most common
    test database).  Core4 also loads the movie demo database, however in addition to some
    configuration setting differences, it uses a different stop words file.
-->

<config>
    <srch2Home>./multicore/</srch2Home>
    <!-- Make sure to specify the home of your SRCH2 installation.  Example: 
          <srch2Home>/home/joe/srch2</srch2Home>
        -->

    <licenseFile>../../conf/srch2_license_key.txt</licenseFile>

    <listeningHostname>0.0.0.0</listeningHostname>
    <listeningPort>8087</listeningPort>

    <!-- moved from <query> which is now per core -->
        <maxSearchThreads>2</maxSearchThreads>

        <!-- Testing multiple cores here -->
        <cores defaultCoreName="core1">
            <core name="core1">
                <dataFile>movie-data.json</dataFile>
                <dataDir>core1Data</dataDir>
                <dataSourceType>1</dataSourceType>
                <indexConfig>
                    <indexType>0</indexType>
                    <supportSwapInEditDistance>true</supportSwapInEditDistance>
                    <fieldBoost>title^2 director^1</fieldBoost>
                    <defaultQueryTermBoost>1</defaultQueryTermBoost>
                    <enablePositionIndex>1</enablePositionIndex> 
                </indexConfig>
                <query>
                    <rankingAlgorithm>
                        <recordScoreExpression>idf_score*doc_boost</recordScoreExpression>
                    </rankingAlgorithm>
                    <fuzzyMatchPenalty>0.9</fuzzyMatchPenalty>
                    <queryTermSimilarityThreshold>0.75</queryTermSimilarityThreshold>
                    <prefixMatchPenalty>0.95</prefixMatchPenalty>
                    <cacheSize>65536000</cacheSize>
                    <rows>10</rows>
                    <fieldBasedSearch>1</fieldBasedSearch>
                    <searcherType>0</searcherType>

                    <!-- 0: exact match; 1: fuzzy match.-->
                    <queryTermFuzzyType>0</queryTermFuzzyType>

                    <!-- 0: prefix match; 1: complete match -->
                    <queryTermPrefixType>1</queryTermPrefixType>

                    <queryResponseWriter>
                        <responseFormat>1</responseFormat>
                        <responseContent type="0"></responseContent>
                    </queryResponseWriter>
                </query>
                <schema>
                    <fields>
                        <field name="title" type="text" indexed="true"/>
                        <field name="director" type="text" indexed="true"/>
                        <field name="genre" type="text" indexed="true"
                            default="HORROR" required="false"/>
                        <field name="year" type="integer" indexed="false" refining="true"
                            default="2000" required="false"/>
                        <field name="id" type="text" refining="true" indexed="false"/>
                    </fields>

                    <uniqueKey>id</uniqueKey>

                    <facetEnabled>true</facetEnabled>
                    <facetFields>
                        <facetField name="genre" facetType="categorical"/>
                        <facetField name="year"  facetType="range" facetStart="1990" facetEnd="2050"
                            facetGap="10"/>
                    </facetFields>

                    <types>
                        <fieldType name="text_standard">
                            <analyzer>
                                <filter name="PorterStemFilter" dictionary="" />
                                <filter name="StopFilter" words="stop-words.txt" />
                            </analyzer>
                        </fieldType>
                    </types>
                </schema>
                <updatehandler>
                    <maxDocs>15000000</maxDocs>
                    <maxMemory>10000000</maxMemory>
                    <mergePolicy>
                        <mergeEveryNSeconds>10</mergeEveryNSeconds>
                        <mergeEveryMWrites>10</mergeEveryMWrites>
                    </mergePolicy>
                    <updateLog>
                        <logLevel>3</logLevel>
                        <accessLogFile>srch2-log.txt</accessLogFile>
                    </updateLog>
                </updatehandler>
            </core>

            <core name="core2">
                <dataDir>core2Data</dataDir>
                <dataSourceType>1</dataSourceType>
                <dataFile>stackoverflow-data-100.json</dataFile>
                <indexConfig>
                    <indexType>0</indexType>
                    <supportSwapInEditDistance>true</supportSwapInEditDistance>
                    <!--  <fieldBoost>title^12 tags^16</fieldBoost> -->
                    <fieldBoost>title^30 tags^20</fieldBoost>
                    <recordBoostField>votes_count</recordBoostField>
                    <defaultQueryTermBoost>1</defaultQueryTermBoost>
                    <enablePositionIndex>1</enablePositionIndex> 
                </indexConfig>

                <query>
                    <rankingalgorithm>
                        <recordScoreExpression>(idf_score*(log(doc_boost+1)^1.5))/(idf_score+log(doc_boost+1))</recordScoreExpression>
                    </rankingalgorithm>
                    <fuzzyMatchPenalty>0.75</fuzzyMatchPenalty>
                    <queryTermSimilarityThreshold>0.8</queryTermSimilarityThreshold>
                    <prefixMatchPenalty>0.85</prefixMatchPenalty>
                    <cacheSize>65536000</cacheSize>
                    <rows>10</rows>
                    <fieldBasedSearch>0</fieldBasedSearch>
                    <searcherType>0</searcherType>

                    <!-- 0: exact match; 1: fuzzy match.-->
                    <queryTermFuzzyType>1</queryTermFuzzyType>

                    <!-- 0: prefix match; 1: complete match -->
                    <queryTermPrefixType>1</queryTermPrefixType>

                    <queryResponseWriter>
                        <responseFormat>1</responseFormat>
                    </queryResponseWriter>
                </query>

                <KeywordPopularityThreshold>10000</KeywordPopularityThreshold>
                <getAllResultsMaxResultsThreshold>2000</getAllResultsMaxResultsThreshold>
                <getAllResultsKAlternative>500</getAllResultsKAlternative>
                <schema>
                    <fields>
                        <field name="title"          type="text"    indexed="true"/>
                        <field name="body"           type="text"    indexed="true"/>
                        <field name="author_name"    type="text"    indexed="true"/>
                        <field name="tags"           type="text"    indexed="true"    refining="true"
                            required="false" multivalued="true"/>
                        <field name="creation_date"  type="time"    indexed="false"   refining="true" default="01/01/2000"  required="false"/>
                        <field name="view_count"     type="integer" indexed="false"   refining="true"
                            default="0"           required="false"/>
                        <field name="answer_count"   type="integer" indexed="false"   refining="true"
                            default="0"           required="false"/>
                        <field name="votes_count"    type="float" indexed="false"   refining="true"
                            default="0"           required="false"/>
                    </fields>

                    <uniqueKey>id</uniqueKey>
                    <facetEnabled>true</facetEnabled>
                    <facetFields>
                        <facetField name="tags" facetType="categorical"/>
                    </facetFields>

                    <types>
                        <fieldType name="text_standard">
                            <analyzer>
                                <filter name="PorterStemFilter" dictionary="" />
                                <filter name="StopFilter" words="stop-words.txt" />
                                <filter name="protectedKeyWordsFilter" words="srch2_protected_words.txt" />
                            </analyzer>
                        </fieldType>
                    </types>
                </schema>
                <updatehandler>
                    <maxDocs>15000000</maxDocs>
                    <maxMemory>10000000</maxMemory>
                    <mergePolicy>
                        <mergeEveryNSeconds>10</mergeEveryNSeconds>
                        <mergeEveryMWrites>10</mergeEveryMWrites>
                    </mergePolicy>
                    <updateLog>
                        <logLevel>3</logLevel>
                        <accessLogFile>srch2-log.txt</accessLogFile>
                    </updateLog>
                </updatehandler>
            </core>

            <core name="core3">
                <dataFile>business-directory-data.json</dataFile>
                <dataDir>core3Data</dataDir>
                <indexConfig>
                    <!--
                    Index Type
                    Required

                    0: Text Index
                    1: Geo+Text Index
                -->
                <indexType>0</indexType>

                <!--
                    0: don't support swap operation in edit distance
                    1: support swap operation in edit distance
                    default value is true
                -->
                <supportSwapInEditDistance>false</supportSwapInEditDistance> 

                <!--
                    Boost Values
                    Optional

                    Boost values for searchable attributes. A boost value is in the range [1,100].
                    If the value is outside the range, it will be set to 100. 
                    Specify the boost values as comma separated entries. 
                    For Example, the boosts for three searchable attributes can be specified as
                    <fieldBoost>relevance^10 name^7 title</fieldBoost>
                    - fields are sparated by one space
                    - if you do not provide any value for a field, it will be considered as 1
                -->
                <fieldBoost></fieldBoost>

                <!-- 
                     Record Boost Field
                     Optional

                     Attribute used as the boost value of a record.
                     Need to be float type in the json objects in the data file.
                -->
                <recordBoostField>relevance</recordBoostField>

                <!--
                    Default Query Term Boost
                    Optional

                    Default query term boost
                    Defaults to 1
                -->
                <defaultQueryTermBoost>1</defaultQueryTermBoost>
            </indexConfig>

            <query>
                <!-- 
           Ranking Algorithm


           The following comments and parameters are related to ranking.  
           Please see http://www.srch2.com/download.html for ranking-related information
           #record-score-expression=doc_boost+(1/(doc_length+1))
           record-score-expression=idf_score*doc_boost
        -->
        <rankingAlgorithm>
            <recordScoreExpression>idf_score*doc_boost</recordScoreExpression>
        </rankingAlgorithm>
        <!--
          Query Term Fuzzy Penalty
          Optional

          Defaults to 1
        -->
        <fuzzyMatchPenalty>0.5</fuzzyMatchPenalty>

        <!--
          Query Term Length Boost
          Optional

          Defaults to 0.5
        -->
        <queryTermLengthBoost>0.5</queryTermLengthBoost>

        <!--
          Prefix Match Penalty
          Optional

          Penalty for a prefix match.  This value is used to multiply the score of record for a term.
          The value should be in the range of 0 to 1
          Defaults to 0.95
        -->
        <prefixMatchPenalty>0.95</prefixMatchPenalty>

        <!--
          Cache Size
          Optional

          Number of bytes in the cache. It should be in the range [50MB, 500MB].
          Its default value is 50MB.
        -->
        <cacheSize>65536000</cacheSize>
        <!--
          Rows
          Optional

          Number of results to retrieve
          Defaults to 10.
        -->
        <rows>10</rows>
        <!--
          Field Based Search
          Optional

          Flag to indicate whether the attribute-based search is supported.
          0 - Disable
          1 - Enable
          Note that to support field-based search, the number of searchable attributes cannot be bigger than 31.
        -->
        <fieldBasedSearch>0</fieldBasedSearch>

        <!-- 
           Searcher Type
           Optional

           in the query result
           0 if topk,
           1 if advanced

           Defaults to 0
        -->
        <searcherType>0</searcherType>



        <!-- 0: exact match; 1: fuzzy match.-->
        <queryTermFuzzyType>0</queryTermFuzzyType>

        <!-- 0: prefix match; 1: complete match -->
        <queryTermPrefixType>0</queryTermPrefixType>

        <queryResponseWriter>
            <!--
            Response Format
            Optional

            0: JSON
            1: JSONP           
            Defaults to 0
        -->
        <responseFormat>0</responseFormat>


        <!--
            Response Content
            Optionl


            Format of each json search response.
            You should set the type by one of the following options:
                    0: format "rid,edit_dist,matching_prefix,in_memory_record";
                    1: format "rid,edit_dist,matching_prefix".
                    2: format "rid,edit_dist,matching_prefix,feilds_to_return".
            Defaults to 0
            It is REQUIRED to set fields_to_return if search-response-format=2
            These are attributes returned to the user.
            For Example:
                    <responseContent type="2">lat,lng</responseContent>
        -->
        <responseContent type="0"></responseContent>

    </queryResponseWriter>
</query>

<schema>

    <fields>
        <!--
                        Fields
                        Required

                        Fields we want to search on in addition to the primary key.

                        "name" : is the name of the field
                        "type" : is the type of the field. Supported types are:
                            - Text
                            - location_longtitude (For Geo search)
                            - location_latitude (For Geo search)
                            - integer
                            - float
                            - time

                        "indexed" : If you want to search on a field, indexed should be true. A field can
                                    only be used for sort, filtering and facet if its 'indexed' property is
                                    false. If you need a field to be used in keyword search AND also for
                                    sort,filter and facet, you should include two instances of the field one
                                    with indexed="true" (for keyword search) and one with indexed="false"
                                    (for sort and facet).
                        "default" : The default value which is used if this field is empty.
                        "required": The flag which indicates whether this field can be empty or not. It is
                                    false by default.

                        Note:
                            - If you want to have geo search, you should have two fields with the types of
                              location_latitude and location_longtitude.
                              Make sure to set both latitude and longitude.
                            - The values of these geo fields should be float in the JSON (input) file.
                            - Primary key is optional to be included here. It can be included here to set
                              its indexed property to true.
                              Type is always text for primary key, it is required and there is no need for
                              default value. If primary key is included here and indexed="false" it will
                              be also used for sort,filtering and facet.
                    -->
                    <field name="relevance" type="float" refining="true" highlight="true" />
                    <field name="category" type="text" indexed="true" />
                    <field name="name" type="text" indexed="true" />
                </fields>

                <!--
                    Primary Key
                    Required

                    Primary key attribute of the data

                    Note:
                        - If the "indexed" value of your primary key field is true, it will be a searchable
                          field too.
                -->
                <uniqueKey>id</uniqueKey>

                <!--
                    Facet enabled flag
                    Indicates whether faceted search is allowed or not.

                    Note:
                        - values are false (disabled) and true (enabled)
                        - By default it is disabled.
                -->
                <facetEnabled>true</facetEnabled>

                <facetFields>
                    <!--
                        Facet fields
                        Required if facet is enabled.

                        name: The name of the field which is used for this facet.
                        facetType: Facet type which is Categorical or Range. Enter "cateorical" or "range"
                        facetStart: The start point of making range facets. REQUIRED for range facets. The
                                    value will be ignored for categorical facets.
                        facetEnd: The end point of making range facets. REQUIRED for range facets. The value
                                  will be ignored for categorical facets.
                        facetGap: The gap used for making range facets. REQUIRED for range facets. The value
                                  will be ignored for categorical facets.                       
                        Note:
                            - All facetFields must be declared in fields tag as well (with indexed="false")
                    -->
                    <facetField name="likes" facetType="range" facetStart="0" facetEnd="50" facetGap="10" />
                    <facetField name="model" facetType="categorical" />
                    <facetField name="price" facetType="range" facetStart="0" facetEnd="100" facetGap="10" />
                </facetFields>

                <types>
                    <fieldType name="text_standard">
                        <analyzer>
                            <!--
                                Stemmer
                                Optional

                                Enable/Disabling the stemmer By providing "dictionary" file.
                                For Example:
                                    Disable Stemmer: <filter name="PorterStemFilter" dictionary="" />
                            -->
                            <filter name="PorterStemFilter" dictionary="" />

                            <!--
                                Stop Word Filter
                                Optional

                                Enable/Disabling the Stop Word Filter By providing "words" file.
                                For Example:
                                    Disable Stop Word Filter: <filter name="StopFilter" words="" />
                            -->
                            <filter name="StopFilter" words="" />

                            <!--
                                Synonym Filter
                                Optional

                                Enable/Disabling the Synonym Filter By providing "synonym" file.
                                For Example:
                                    Disable Synonym Filter: <filter name="SynonymFilter" synonyms=""
                                                                    expand="true"/>
                                To keep the original word in this filter, set the "expand" attribute as "True"
                                Otherwise set it as "False"
                            -->
                            <filter name="SynonymFilter" synonyms=""  expand="true"/>      
                        </analyzer>
                    </fieldType>
                </types>
            </schema>
            <updatehandler>
                <!--
          Maximum Number of Documents
          Required

          Maximum number of records that can be inserted into the engine.
          The number depends on the size of each record and the available memory
        -->
          <maxDocs>15000000</maxDocs>

          <!--
          Maximum Number of Documents
          Required

          Maximum size of memory that can be used.
        -->
          <maxMemory>100000</maxMemory>

          <!--
          Merge Policies
          Required

          mergeEveryNSeconds:
          The number of seconds after which newly inserted/deleted records are merged into the indexes.
          Its minimum value is 10 (seconds).
          mergeEveryMWrites:
          The number of write operations after which newly inserted/deleted records are merged into the indexes.
        -->
        <mergePolicy>
            <mergeEveryNSeconds>10</mergeEveryNSeconds>
            <mergeEveryMWrites>100</mergeEveryMWrites>
        </mergePolicy>

        <updateLog>
            <!-- 
             Log Level
             Optional

             Log level
             0 SILENT
             1 ERROR
             2 WARN
             3 INFO
             Defaults to 3 INFO
            -->
            <logLevel>3</logLevel>

            <!--
            Access Log File
            Required

            Path to Access Log File
            -->
            <accessLogFile>srch2-log.txt</accessLogFile>
        </updateLog>
    </updatehandler>
</core>

<core name="core4">
    <dataFile>movie-data.json</dataFile>
    <dataDir>core4Data</dataDir>
    <dataSourceType>1</dataSourceType>
    <indexConfig>
        <indexType>0</indexType>
        <supportSwapInEditDistance>false</supportSwapInEditDistance>
        <fieldBoost>title^2 director^1</fieldBoost>
        <defaultQueryTermBoost>1</defaultQueryTermBoost>
        <enablePositionIndex>1</enablePositionIndex> 
    </indexConfig>
    <query>
        <rankingAlgorithm>
            <recordScoreExpression>idf_score*doc_boost</recordScoreExpression>
        </rankingAlgorithm>
        <fuzzyMatchPenalty>0.5</fuzzyMatchPenalty>
        <queryTermSimilarityThreshold>0.85</queryTermSimilarityThreshold>
        <prefixMatchPenalty>0.95</prefixMatchPenalty>
        <cacheSize>65536000</cacheSize>
        <rows>5</rows>
        <fieldBasedSearch>1</fieldBasedSearch>
        <searcherType>0</searcherType>

        <!-- 0: exact match; 1: fuzzy match.-->
        <queryTermFuzzyType>1</queryTermFuzzyType>

        <!-- 0: prefix match; 1: complete match -->
        <queryTermPrefixType>0</queryTermPrefixType>

        <queryResponseWriter>
            <responseFormat>1</responseFormat>
        </queryResponseWriter>
    </query>
    <schema>
        <fields>
            <field name="title" type="text" indexed="true"/>
            <field name="director" type="text" indexed="true"/>
            <field name="genre" type="text" indexed="true"
                default="HORROR" required="false"/>
            <field name="year" type="integer" indexed="false" refining="true"
                default="2000" required="false"/>
            <field name="id" type="text" refining="true" indexed="false"/>
        </fields>

        <uniqueKey>id</uniqueKey>

        <facetEnabled>true</facetEnabled>
        <facetFields>
            <facetField name="genre" facetType="categorical"/>
            <facetField name="year"  facetType="range" facetStart="1990" facetEnd="2050"
                facetGap="10"/>
        </facetFields>

        <types>
            <fieldType name="text_standard">
                <analyzer>
                    <filter name="PorterStemFilter" dictionary="" />
                    <filter name="StopFilter" words="stop-words2.txt" />
                </analyzer>
            </fieldType>
        </types>
    </schema>
    <updatehandler>
        <maxDocs>15000000</maxDocs>
        <maxMemory>10000000</maxMemory>
        <mergePolicy>
            <mergeEveryNSeconds>10</mergeEveryNSeconds>
            <mergeEveryMWrites>10</mergeEveryMWrites>
        </mergePolicy>
        <updateLog>
            <logLevel>4</logLevel>
            <accessLogFile>core4-log.txt</accessLogFile>
        </updateLog>
    </updatehandler>
</core>
<core name="coreGeo">

    <dataDir>coreGeoData</dataDir>
    <dataFile>data.json</dataFile>
    <indexConfig>
        <indexType>1</indexType>
        <supportSwapInEditDistance>false</supportSwapInEditDistance>          
        <fieldBoost>category^2 name^1</fieldBoost>
        <recordBoostField>relevance</recordBoostField>
        <defaultQueryTermBoost>1</defaultQueryTermBoost>
    </indexConfig>
    <query>
        <rankingAlgorithm>
            <recordScoreExpression>idf_score*doc_boost</recordScoreExpression>
        </rankingAlgorithm>

        <fuzzyMatchPenalty>0.5</fuzzyMatchPenalty>
        <queryTermLengthBoost>0.5</queryTermLengthBoost>
        <prefixMatchPenalty>0.95</prefixMatchPenalty>
        <cacheSize>65536000</cacheSize>
        <rows>10</rows>
        <fieldBasedSearch>0</fieldBasedSearch>
        <searcherType>0</searcherType>
        <queryTermFuzzyType>1</queryTermFuzzyType>
        <queryTermPrefixType>0</queryTermPrefixType>
        <queryResponseWriter>
            <responseFormat>0</responseFormat>
            <responseContent type="0"></responseContent>
        </queryResponseWriter>
    </query>
    <updatehandler>
        <!--
            Maximum Number of Documents
            Required

            Maximum number of records that can be inserted into the engine.
            The number depends on the size of each record and the available memory
         -->
        <maxDocs>15000000</maxDocs>

        <!--
            Maximum Number of Documents
            Required

            Maximum size of memory that can be used.
        -->
        <maxMemory>100000</maxMemory>

        <!--
            Merge Policies
            Required

            mergeEveryNSeconds:
            The number of seconds after which newly inserted/deleted records are merged into the indexes.
            Its minimum value is 10 (seconds).
            mergeEveryMWrites:
            The number of write operations after which newly inserted/deleted records are merged into the indexes.
        -->
        <mergePolicy>
            <mergeEveryNSeconds>10</mergeEveryNSeconds>
            <mergeEveryMWrites>100</mergeEveryMWrites>
        </mergePolicy>

    </updatehandler>

    <schema>

        <fields>
            <!--
        Fields
        Required

        Fields we want to search on in addition to the primary key.

        "name" : is the name of the field
        "type" : is the type of the field. Supported types are:
            - Text
            - location_longtitude (For Geo search)
            - location_latitude (For Geo search)
            - integer
            - float
            - time

        "indexed" : If you want to search on a field, indexed should be true. A field can only be used for sort, filtering 
                    and facet if its 'indexed' property is false. If you need a field to be used in keyword search AND also
                    for sort,filter and facet, you should include two instances of the field one with indexed="true" (for
                    keyword search) and one with indexed="false" (for sort and facet). 
        "default" : The default value which is used if this field is empty.
        "required": The flag which indicates whether this field can be empty or not. It is false by default.

        Note:
            - If you want to have geo search, you should have two fields with the types of ocation_latitude and location_longtitude.
            Make sure to set both latitude and longitude.
            - The values of these geo fields should be float in the JSON (input) file.
            - Primary key is optional to be included here. It can be included here to set its indexed property to true.
            Type is always text for primary key, it is required and there is no need for default value. If primary key is included
            here and indexed="false" it will be also used for sort,filtering and facet.
            - 
       -->
       <field name="relevance" type="float" refining="true" highlight="true" />
       <field name="category" type="text" indexed="true" />
       <field name="name" type="text" indexed="true" />
       <field name="lng" type="location_longitude" indexed="false"  />
       <field name="lat" type="location_latitude" indexed="false"   />

   </fields>

   <!--
        Primary Key
        Required

        Primary key attribute of the data

        Note:
        - If the "indexed" value of your primary key field is true, it will be a searchable field too.
     -->
     <uniqueKey>id</uniqueKey>

     <!--
            Facet enabled flag
            Indicates whether faceted search is allowed or not.

            Note:
            - values are false (disabled) and true (enabled)
            - By default it is disabled.
      -->
      <facetEnabled>false</facetEnabled>

      <facetFields>
          <!--
                Facet fields
                Required if facet is enabled.

                name: The name of the field which is used for this facet.
                facetType: Facet type which is Categorical or Range. Enter "cateorical" or "range"
                facetStart: The start point of making range facets. REQUIRED for range facets. The value will 
                be ignored for categorical facets.
                facetEnd: The end point of making range facets. REQUIRED for range facets. The value will 
                be ignored for categorical facets.
                facetGap: The gap used for making range facets. REQUIRED for range facets. The value will 
                be ignored for categorical facets.	  		
                Note:
                - All facetFields must be declared in fields tag as well (with indexed="false")
          -->
          <facetField name="likes" facetType="range" facetStart="0" facetEnd="50" facetGap="10" />
          <facetField name="model" facetType="categorical" />
          <facetField name="price" facetType="range" facetStart="0" facetEnd="100" facetGap="10" />
      </facetFields>


      <types>
          <fieldType name="text_standard">
              <analyzer>
                  <!--
                Stemmer
                Optional

                Enable/Disabling the stemmer By providing "dictionary" file.
                For Example:
                    Disable Stemmer: <filter name="PorterStemFilter" dictionary="" />
            -->
            <filter name="PorterStemFilter" dictionary="" />

            <!--
                Stop Word Filter
                Optional

                Enable/Disabling the Stop Word Filter By providing "words" file.
                For Example:
                    Disable Stop Word Filter: <filter name="StopFilter" words="" />
            -->
            <filter name="StopFilter" words="" />

            <!--
                Synonym Filter
                Optional

                Enable/Disabling the Synonym Filter By providing "synonym" file.
                For Example:
                    Disable Synonym Filter: <filter name="SynonymFilter" synonyms=""  expand="true"/>
                To keep the original word in this filter, set the "expand" attribute as "True"
                Otherwise set it as "False"
            -->
            <filter name="SynonymFilter" synonyms=""  expand="true"/>      
        </analyzer>
    </fieldType>
</types>
    </schema>

    </core>

    </cores>

        <updateLog>
            <!-- 
                Log Level
                Optional

                Log level
                    0 SILENT
                    1 ERROR
                    2 WARN
                    3 INFO
                Defaults to 3 INFO
            -->
            <logLevel>3</logLevel>

            <!--
                Access Log File
                Required

                Path to Access Log File
            -->
            <accessLogFile>geolog.txt</accessLogFile>
        </updateLog>
        
</config>
