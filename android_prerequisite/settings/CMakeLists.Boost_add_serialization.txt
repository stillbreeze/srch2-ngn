cmake_minimum_required(VERSION 2.8)

project(android-boost)
#Force to build static library
set(BUILD_SHARED_LIBS ON)

#find patched boost directory
set(boost_root ${CMAKE_CURRENT_SOURCE_DIR}/boost_1_46_0 CACHE PATH
    "Boost 1.46.0 patched for android")

if(NOT EXISTS ${boost_root})
message(FATAL_ERROR
  "${boost_root} does not exist!
    Please run ${CMAKE_CURRENT_SOURCE_DIR}/get_boost.sh to get a patched copy of
    boost 1.46.0
    ")
endif()

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -DNO_BZIP2" )
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DNO_BZIP2 -lz")

include_directories(${boost_root} )

file(GLOB lib_srcs ${boost_root}/libs/serialization/src/*.cpp)

add_library( boost_serialization SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/system/src/*.cpp)

add_library( boost_system SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/filesystem/v3/src/*.cpp)

add_library( boost_filesystem SHARED ${lib_srcs})

set(lib_dir ${boost_root}/libs/iostreams/src)
set(lib_srcs ${lib_dir}/file_descriptor.cpp   ${lib_dir}/gzip.cpp   ${lib_dir}/mapped_file.cpp   ${lib_dir}/zlib.cpp)


add_library( boost_iostreams SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/program_options/src/*.cpp)

add_library( boost_program_options SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/regex/src/*.cpp)

add_library( boost_regex SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/signals/src/*.cpp)

add_library( boost_signals SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/thread/src/pthread/*.cpp)

add_library( boost_thread SHARED ${lib_srcs})

file(GLOB lib_srcs ${boost_root}/libs/date_time/src/gregorian/*.cpp ${boost_root}/libs/date_time/src/posix_time/*.cpp)

add_library( boost_date_time SHARED ${lib_srcs})

target_link_libraries(boost_system /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_filesystem boost_system /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_serialization /usr/arm-linux-gnueabi/lib/libstdc++.so.6 /usr/arm-linux-gnueabi/lib/libpthread.so.0 /usr/arm-linux-gnueabi/lib/libgcc_s.so.1 /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_regex /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_date_time /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_system /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_signals /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_thread /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_iostreams /usr/arm-linux-gnueabi/lib/libc.so)
target_link_libraries(boost_program_options /usr/arm-linux-gnueabi/lib/libc.so)

set(Boost_INCLUDE_DIRS ${boost_root})
set(Boost_LIBRARIES boost_serialization boost_filesystem boost_system boost_program_options boost_iostreams boost_date_time)
set(Boost_LINK_DIRS ${LIBRARY_OUTPUT_PATH})

message(STATUS "libBoost = $Boost_LIBRARIES")

configure_file(${CMAKE_SOURCE_DIR}/BoostConfig.cmake.in
               ${CMAKE_BINARY_DIR}/BoostConfig.cmake @ONLY)

install(DIRECTORY ${boost_root}/boost DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
install(TARGETS boost_serialization DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_system DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_filesystem DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_program_options DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_iostreams DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_regex DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_signals DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_thread DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS boost_date_time DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

